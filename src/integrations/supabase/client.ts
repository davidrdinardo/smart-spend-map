
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import type { DatabaseWithTables } from './schema';

const SUPABASE_URL = "https://nefaagbbbvfgssxgacly.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5lZmFhZ2JiYnZmZ3NzeGdhY2x5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc1ODY2NzcsImV4cCI6MjA2MzE2MjY3N30.sMNg5a68enUisyAKd6b4EqDqLkeYNDqjLZb_gCCjHoY";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<DatabaseWithTables>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      storageKey: 'sb-moneymap-auth-token',
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
      flowType: 'pkce'
    }
  }
);

// Add diagnostic helper to check auth state
export const checkAuthState = async () => {
  try {
    const { data, error } = await supabase.auth.getSession();
    console.log("Current auth state:", {
      hasSession: !!data.session,
      sessionExpiresAt: data.session?.expires_at,
      error: error?.message,
      user: data.session?.user?.id
    });
    
    // Check local storage for auth data
    const authData = localStorage.getItem('sb-moneymap-auth-token');
    console.log("Auth data in localStorage:", !!authData);
    
    return { session: data.session, error };
  } catch (err) {
    console.error("Error checking auth state:", err);
    return { session: null, error: err };
  }
};

// Enhanced debug helper
export const debugSupabaseSession = () => {
  const lsData = localStorage.getItem('sb-moneymap-auth-token');
  let parsedData = null;
  try {
    parsedData = lsData ? JSON.parse(lsData) : null;
  } catch (e) {
    console.error("Error parsing localStorage auth data:", e);
  }
  
  return {
    hasLocalStorage: !!lsData,
    parsedData,
    currentTimestamp: new Date().toISOString()
  };
};
